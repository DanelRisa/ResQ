{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { Navigate } from \"react-router-dom\";\n// import AuthService from \"../services/auth.service\";\n\n// export default class Profile extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       redirect: null,\n//       userReady: false,\n//       currentUser: { username: \"\" }\n//     };\n//   }\n\n//   componentDidMount() {\n//     const currentUser = AuthService.getCurrentUser();\n\n//     if (!currentUser) this.setState({ redirect: \"/home\" });\n//     this.setState({ currentUser: currentUser, userReady: true })\n//   }\n\n//   render() {\n//     if (this.state.redirect) {\n//       return <Navigate to={this.state.redirect} />\n//     }\n\n//     const { currentUser } = this.state;\n\n//     return (\n//       <div className=\"container\">\n//         {(this.state.userReady) ?\n//         <div>\n//         <header className=\"jumbotron\">\n//           <h3>\n//             <strong>{currentUser.username}</strong> Profile\n//           </h3>\n//         </header>\n//         <p>\n//           <strong>Token:</strong>{\" \"}\n//           {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n//           {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n//         </p>\n//         <p>\n//           <strong>Id:</strong>{\" \"}\n//           {currentUser.id}\n//         </p>\n//         <p>\n//           <strong>Email:</strong>{\" \"}\n//           {currentUser.email}\n//         </p>\n//         <strong>Authorities:</strong>\n//         <ul>\n//           {currentUser.roles &&\n//             currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n//         </ul>\n//       </div>: null}\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Данель/OneDrive/Desktop/ResQB/republicProject/src/components/profile.component.js"],"sourcesContent":["// import React, { Component } from \"react\";\r\n// import { Navigate } from \"react-router-dom\";\r\n// import AuthService from \"../services/auth.service\";\r\n\r\n// export default class Profile extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       redirect: null,\r\n//       userReady: false,\r\n//       currentUser: { username: \"\" }\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const currentUser = AuthService.getCurrentUser();\r\n\r\n//     if (!currentUser) this.setState({ redirect: \"/home\" });\r\n//     this.setState({ currentUser: currentUser, userReady: true })\r\n//   }\r\n\r\n//   render() {\r\n//     if (this.state.redirect) {\r\n//       return <Navigate to={this.state.redirect} />\r\n//     }\r\n\r\n//     const { currentUser } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"container\">\r\n//         {(this.state.userReady) ?\r\n//         <div>\r\n//         <header className=\"jumbotron\">\r\n//           <h3>\r\n//             <strong>{currentUser.username}</strong> Profile\r\n//           </h3>\r\n//         </header>\r\n//         <p>\r\n//           <strong>Token:</strong>{\" \"}\r\n//           {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n//           {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n//         </p>\r\n//         <p>\r\n//           <strong>Id:</strong>{\" \"}\r\n//           {currentUser.id}\r\n//         </p>\r\n//         <p>\r\n//           <strong>Email:</strong>{\" \"}\r\n//           {currentUser.email}\r\n//         </p>\r\n//         <strong>Authorities:</strong>\r\n//         <ul>\r\n//           {currentUser.roles &&\r\n//             currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n//         </ul>\r\n//       </div>: null}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}